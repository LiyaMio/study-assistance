//头指针和头结点的区别
//头指针含有数据
//头节点只储存了第一个数据的地址


#include<cstdio>
#include<iostream>
#include<string>
#include<algorithm>
#include<cstring>
#include<cmath>
#include <set>
using namespace std;
typedef long long ll;
typedef struct node{
	char data;
	struct node* next;
}node;
node *head=NULL;//头指针
node *p,*c;//c为尾指针
node*create()//创建链表
{
	char a[1000];   
	cin>>a;
	int l=strlen(a);
	for(int i=0;i<l;++i)
	{
		c=(node*)malloc(sizeof(node));
		if(head==NULL)
			head=c;//head.data中有数据，所以head是头指针
		else
			p->next=c;
		c->next=NULL;
		c->data=a[i];
		p=c;
	}
	return head;
}
void Print(node*L)//打印链表
{
	c=L;
	while(c!=NULL)
	{
		printf("%c ",c->data);
		c=c->next;
	}
}
void Rea(node*L)//释放空间
{
	c=L;
	while(c!=NULL)
	{
		p=c->next;
		free(c);
		c=p;
	}
}
int main()
{
	create();
	Print(head);
	Rea(head);
	return 0;
}
